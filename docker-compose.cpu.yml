version: '3.8'

services:
  # Japanese AI Tutor Application
  japanese-tutor:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tutor-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Ollama AI Service (CPU Only)
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ollama-data:/root/.ollama
    restart: unless-stopped
    networks:
      - tutor-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:11434/api/tags", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 2G

  # Model Initialization Service
  model-init:
    image: ollama/ollama:latest
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - tutor-network
    environment:
      - OLLAMA_HOST=ollama:11434
    entrypoint: >
      sh -c "
        echo 'Waiting for Ollama to be ready...' &&
        sleep 15 &&
        echo 'Pulling llama3:8b model...' &&
        OLLAMA_HOST=ollama:11434 ollama pull llama3:8b &&
        echo 'Model pulled successfully!'
      "
    restart: "no"

volumes:
  ollama-data:
    driver: local

networks:
  tutor-network:
    driver: bridge
